import type { LayoutContext } from './LayoutContext';
import type { LayoutFragment } from './LayoutFragment';
import type { LayoutObject } from './LayoutObject';
import type { IntrinsicSizes, LayoutConstraints } from './types';
export interface LayoutChildrenFactory {
    (options: LayoutChildrenOptions): LayoutChildren;
}
export interface LayoutChildrenOptions {
    node: LayoutObject;
}
export declare class LayoutChildren {
    protected readonly _layoutContext: LayoutContext;
    protected readonly options: LayoutChildrenOptions;
    node: LayoutObject;
    readonly styleMap: Map<string, any>;
    layoutContext: LayoutContext;
    constructor(_layoutContext: LayoutContext, options: LayoutChildrenOptions);
    intrinsicSizes(): Promise<IntrinsicSizes>;
    layoutNextFragment(constraints: LayoutConstraints): Promise<LayoutFragment>;
}
//# sourceMappingURL=LayoutChildren.d.ts.map