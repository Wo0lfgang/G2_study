import { CustomElement, DisplayObjectConfig } from '@antv/g';
import type { GenericAnimation } from '../animation';
type Descriptor<T> = {
    render?: (attributes: Required<T>, container: CustomElement<T>, animate?: GenericAnimation) => void;
    bindEvents?: (attributes: T, container: CustomElement<T>) => void;
};
export declare abstract class GUI<T> extends CustomElement<T> {
    abstract update(cfg?: Partial<T>, animate?: GenericAnimation): void;
}
export declare function createComponent<T>(descriptor: Descriptor<T>, defaultStyle?: Partial<T>): new (c: DisplayObjectConfig<T>) => GUI<T>;
export {};
