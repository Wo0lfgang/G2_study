import { DisplayObject, DisplayObjectConfig, Group, GroupStyleProps, PathStyleProps, RectStyleProps, TextStyleProps } from '@antv/g';
import { GUI } from '../../../core/gui';
import { ExtendDisplayObject, PrefixedStyle } from '../../../types';
import { SeriesAttr } from '../../../util';
type ItemMarkerStyle = {
    size?: number;
} & PathStyleProps;
type ItemTextStyle = Omit<TextStyleProps, 'text'>;
type ItemBackgroundStyle = Omit<RectStyleProps, 'width' | 'height'>;
export interface CategoryItemData {
    label?: ExtendDisplayObject;
    value?: ExtendDisplayObject;
}
export type CategoryItemStyle = {
    marker?: string | (() => DisplayObject);
} & PrefixedStyle<ItemMarkerStyle, 'marker'> & PrefixedStyle<ItemTextStyle, 'label'> & PrefixedStyle<ItemTextStyle, 'value'> & PrefixedStyle<ItemBackgroundStyle, 'background'>;
export type CategoryItemCfg = GroupStyleProps & {
    /** spacing between marker, label and value */
    spacing?: SeriesAttr;
    width?: number;
    span?: SeriesAttr;
};
export type CategoryItemStyleProps = CategoryItemStyle & CategoryItemCfg & CategoryItemData;
export type CategoryItemOptions = DisplayObjectConfig<CategoryItemStyleProps>;
export declare class CategoryItem extends GUI<CategoryItemStyleProps> {
    constructor(config: DisplayObjectConfig<CategoryItemStyleProps>);
    private markerGroup;
    private labelGroup;
    private valueGroup;
    private background;
    private get showValue();
    private get actualSpace();
    private get span();
    private get shape();
    private get spacing();
    private get layout();
    private renderMarker;
    private renderLabel;
    private renderValue;
    private renderBackground;
    private adjustLayout;
    render(attributes: CategoryItemStyleProps, container: Group): void;
}
export {};
