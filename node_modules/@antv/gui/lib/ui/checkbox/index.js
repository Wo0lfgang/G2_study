"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Checkbox = void 0;
var tslib_1 = require("tslib");
var util_1 = require("@antv/util");
var util_2 = require("../../util");
var gui_1 = require("../../core/gui");
var constant_1 = require("./constant");
function getLablePosition(shape, spacing) {
    var bounds = shape.getLocalBounds();
    return {
        x: bounds.halfExtents[0] ? bounds.max[0] + (spacing || 0) : shape.style.x,
        y: bounds.halfExtents[1] ? (bounds.min[1] + bounds.max[1]) / 2 : shape.style.y,
    };
}
var Checkbox = /** @class */ (function (_super) {
    tslib_1.__extends(Checkbox, _super);
    function Checkbox(options) {
        return _super.call(this, (0, util_1.deepMix)({}, Checkbox.defaultOptions, options)) || this;
    }
    Checkbox.prototype.render = function (attributes, container) {
        var label = attributes.label, boxStyle = attributes.boxStyle, checkedStyle = attributes.checkedStyle, checked = attributes.checked, spacing = attributes.spacing;
        this.checked = !!checked;
        var group = (0, util_2.maybeAppend)(container, '.checkbox-content', 'g').attr('className', 'checkbox-content').node();
        var checkboxBoxStyle = (0, util_1.assign)({}, this.checked ? constant_1.CHECKBOX_RECT_STYLE.selected : constant_1.CHECKBOX_RECT_STYLE.default, boxStyle);
        var checkboxBoxCheckedStyle = (0, util_1.assign)({}, constant_1.CHECKED_SHAPE_STYLE, checkedStyle);
        this.checkboxBoxShape = (0, util_2.maybeAppend)(group, '.checkbox-box', 'rect')
            .styles(tslib_1.__assign({ className: 'checkbox-box', zIndex: (group.style.zIndex || 0) - 1 }, checkboxBoxStyle))
            .node();
        (0, util_2.maybeAppend)(this.checkboxBoxShape, '.checkbox-checked', 'path').styles(tslib_1.__assign({ className: 'checkbox-box-checked', stroke: '#fff' }, checkboxBoxCheckedStyle));
        var _a = getLablePosition(this.checkboxBoxShape, Number(spacing)), x = _a.x, y = _a.y;
        (0, util_2.maybeAppend)(group, '.checkbox-label', 'text').styles(tslib_1.__assign({ className: 'checkbox-label', x: x, y: y }, label));
    };
    /**
     * 组件 checkbox
     */
    Checkbox.tag = 'checkbox';
    /**
     * 默认配置项
     */
    Checkbox.defaultOptions = {
        style: {
            x: 0,
            y: 0,
            label: tslib_1.__assign({ text: '' }, constant_1.LABEL_TEXT_STYLE),
            spacing: 4,
            checked: false,
        },
    };
    return Checkbox;
}(gui_1.GUI));
exports.Checkbox = Checkbox;
//# sourceMappingURL=index.js.map