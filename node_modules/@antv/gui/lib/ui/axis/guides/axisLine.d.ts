import type { StandardAnimationOption, AnimationResult } from '../../../animation';
import type { Vector2 } from '../../../types';
import { Selection } from '../../../util';
import type { AxisStyleProps, Direction, LinearAxisStyleProps } from '../types';
export declare const getLineAngle: {
    (...args: any[]): any;
    cache: Map<any, any>;
};
export declare const getLineTangentVector: {
    (...args: any[]): any;
    cache: Map<any, any>;
};
export declare function getDirectionVector(value: number, direction: Direction, cfg: AxisStyleProps): Vector2;
export declare const getLinearValuePos: {
    (...args: any[]): any;
    cache: Map<any, any>;
};
export declare const getArcValuePos: {
    (...args: any[]): any;
    cache: Map<any, any>;
};
export declare function getValuePos(value: number, cfg: AxisStyleProps): any;
export declare function isAxisHorizontal(cfg: LinearAxisStyleProps): boolean;
export declare function isAxisVertical(cfg: LinearAxisStyleProps): boolean;
export declare function renderAxisLine<T>(container: Selection, cfg: AxisStyleProps, style: any, animate: StandardAnimationOption): AnimationResult[];
