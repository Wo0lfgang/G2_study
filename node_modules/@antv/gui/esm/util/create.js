import { __extends } from "tslib";
import { CustomElement } from '@antv/g';
import { deepMix } from '@antv/util';
import { deepAssign } from './deep-assign';
var GUI = /** @class */ (function (_super) {
    __extends(GUI, _super);
    function GUI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GUI;
}(CustomElement));
export { GUI };
export function createComponent(descriptor, defaultStyle) {
    return /** @class */ (function (_super) {
        __extends(class_1, _super);
        function class_1(config) {
            var _this = _super.call(this, deepAssign({}, { style: defaultStyle }, config)) || this;
            _this.descriptor = descriptor;
            return _this;
        }
        class_1.prototype.connectedCallback = function () {
            var _a, _b, _c, _d;
            (_b = (_a = this.descriptor).render) === null || _b === void 0 ? void 0 : _b.call(_a, this.attributes, this);
            (_d = (_c = this.descriptor).bindEvents) === null || _d === void 0 ? void 0 : _d.call(_c, this.attributes, this);
        };
        class_1.prototype.update = function (cfg, animate) {
            var _a, _b;
            if (cfg === void 0) { cfg = {}; }
            this.attr(deepMix({}, this.attributes, cfg));
            (_b = (_a = this.descriptor).render) === null || _b === void 0 ? void 0 : _b.call(_a, this.attributes, this, animate);
        };
        return class_1;
    }(CustomElement));
}
//# sourceMappingURL=create.js.map