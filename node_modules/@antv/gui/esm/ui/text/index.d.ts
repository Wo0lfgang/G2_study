import { GUI } from '../../core/gui';
import type { TextCfg, TextOptions } from './types';
export type { TextCfg, TextOptions };
/**
 * 渲染流程
 * 1. transform
 * 2. create text shape
 * 3. overflow
 * 4. layout
 * 5. create decoration
 * 6. create background
 * 7. set anchor
 */
export declare class Text extends GUI<Required<TextCfg>> {
    static tag: string;
    private static defaultOptions;
    /**
     * 文字行宽
     * 如果多行则取最长宽度
     * 在文字渲染之前也可获得
     */
    get textWidth(): number;
    get textHeight(): number;
    /**
     * 文本包围盒宽度
     */
    get width(): number;
    /**
     * 文本包围盒高度
     */
    get height(): number;
    private get lineHeight();
    /**
     * 单词字母首大写
     */
    private get capitalizeWord();
    /**
     * transform 后的文本
     */
    private get text();
    private get ellipsisText();
    /**
     * 最终渲染的文本
     */
    private get renderText();
    private get verticalAlign();
    private get font();
    private get fontColor();
    private get wordWrap();
    private get wordWrapWidth();
    private get textCfg();
    private get backgroundCfg();
    private get decorationLineWidth();
    private get decorationCfg();
    private get clipRectCfg();
    private textShape;
    private decorationGroup;
    /** 装饰线条 */
    private decorationShape;
    private backgroundShape;
    /** 裁切矩形 */
    private clipRect;
    constructor(options: TextOptions);
    init(): void;
    update(cfg: Partial<TextCfg>): void;
    render(): void;
    clear(): void;
    private initShape;
    private overflow;
    private adjustTextAlign;
    private adjustVerticalAlign;
    private layout;
}
