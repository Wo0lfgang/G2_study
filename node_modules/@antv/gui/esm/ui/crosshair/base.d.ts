import { Path, Group } from '@antv/g';
import { GUI } from '../../core/gui';
import { Tag } from '../tag';
import type { CrosshairBaseStyleProps, CrosshairBaseOptions } from './types';
import type { Point } from '../../types';
export declare abstract class CrosshairBase<T extends CrosshairBaseStyleProps> extends GUI<Required<T>> {
    static tag: string;
    protected static defaultOptions: {
        style: {
            tagText: string;
            lineStroke: string;
            lineStrokeOpacity: number;
            lineLineWidth: number;
            lineLineDash: number[];
        };
    };
    /**
     * 指针位置
     */
    protected pointer: Point;
    protected shapesGroup: Group;
    protected tagShape: Tag;
    protected crosshairShape: Path;
    /**
     * 获得 pointer 的相对坐标
     */
    protected get localPointer(): number[];
    /**
     * 获得 crosshair 的 path
     */
    protected abstract get crosshairPath(): any[];
    private get tagCfg();
    private get crosshairCfg();
    constructor(options: CrosshairBaseOptions);
    render(attributes: T, container: Group): void;
    update(cfg?: Partial<CrosshairBaseStyleProps>): void;
    /**
     * 设置当前指针的位置
     * 1. 线条类型 调整位置即可
     * 2. circle 和 polygon 需要重新计算 path
     */
    setPointer(pointer: Point): void;
    /**
     * 调整tag
     */
    protected abstract adjustLayout(): void;
}
