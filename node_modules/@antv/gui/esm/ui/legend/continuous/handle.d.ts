import { Group, type DisplayObjectConfig, type GroupStyleProps, type TextStyleProps } from '@antv/g';
import { GUI } from '../../../core/gui';
import type { PrefixedStyle } from '../../../types';
import { MarkerStyleProps } from '../../marker';
export type HandleStyleProps<T = any> = GroupStyleProps & PrefixedStyle<Omit<Partial<MarkerStyleProps>, 'x' | 'y'>, 'marker'> & PrefixedStyle<TextStyleProps, 'label'> & {
    orient: 'vertical' | 'horizontal';
    /** spacing between marker and label */
    spacing?: number;
    showLabel?: boolean;
    formatter?: (val: T) => string;
};
export type HandleType = 'start' | 'end';
export declare const DEFAULT_HANDLE_CFG: HandleStyleProps;
export declare class Handle extends GUI<HandleStyleProps> {
    constructor(config: DisplayObjectConfig<HandleStyleProps>);
    private marker;
    render(attributes: HandleStyleProps, container: Group): void;
    attributeChangedCallback(): void;
    private renderMarker;
    private renderLabel;
}
