import { Group, type DisplayObjectConfig, type GroupStyleProps } from '@antv/g';
import { GUI } from '../../../core/gui';
import type { CallbackableObject, CallbackParameter, PrefixedStyle } from '../../../types';
import { SeriesAttr, Selection } from '../../../util';
import { type NavigatorStyleProps } from '../../navigator';
import { type CategoryItemData, type CategoryItemStyleProps } from './item';
interface CategoryItemsDatum extends CategoryItemData {
    [keys: string]: any;
}
interface CategoryItemsCfg {
    orient?: 'horizontal' | 'vertical';
    data: CategoryItemsDatum[];
    layout?: 'flex' | 'grid';
    width?: number;
    height?: number;
    gridRow?: number;
    gridCol?: number;
    padding?: SeriesAttr;
    rowPadding?: number;
    colPadding?: number;
    click?: (el: Selection) => void;
    mouseenter?: (el: Selection) => void;
    mouseleave?: (el: Selection) => void;
}
type CallbackableItemStyle = CallbackableObject<Omit<CategoryItemStyleProps, 'width' | 'height'>, CallbackParameter<CategoryItemsDatum>>;
export type CategoryItemsStyleProps = GroupStyleProps & CategoryItemsCfg & PrefixedStyle<NavigatorStyleProps, 'nav'> & PrefixedStyle<CallbackableItemStyle, 'item'>;
export declare class CategoryItems extends GUI<CategoryItemsStyleProps> {
    constructor(config: DisplayObjectConfig<CategoryItemsStyleProps>);
    private navigator;
    private navigatorShape;
    private get pageViews();
    private get grid();
    private get renderData();
    private getGridLayout;
    private getFlexLayout;
    private get itemsLayout();
    private ifHorizontal;
    private flattenPage;
    private renderItems;
    private relayoutNavigator;
    private adjustLayout;
    private renderNavigator;
    getBBox(): DOMRect;
    render(attributes: Required<CategoryItemsStyleProps>, container: Group): void;
    private dispatchCustomEvent;
}
export {};
