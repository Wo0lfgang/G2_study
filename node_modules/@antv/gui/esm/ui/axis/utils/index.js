import { __assign } from "tslib";
export * from './helper';
export function calcOptimizedTicks(ticks, ticksThreshold, appendTick) {
    // Apply default id to ticks data.
    var T = Array.from(ticks || []).map(function (d, idx) { return (__assign({ id: "".concat(idx) }, d)); });
    var tickCount = T.length;
    var optimizedTicks = T;
    if (typeof ticksThreshold === 'number') {
        if (tickCount > ticksThreshold) {
            var page_1 = Math.ceil(tickCount / ticksThreshold);
            // 保留最后一条
            optimizedTicks = T.filter(function (_, idx) { return idx % page_1 === 0 || idx === tickCount - 1; });
        }
    }
    if (appendTick && optimizedTicks[optimizedTicks.length - 1].value !== 1) {
        optimizedTicks.push({ value: 1, id: 'append' });
    }
    return optimizedTicks;
}
export function autoHideTickLine(labels, tickLines, autoHideTickLine) {
    if (!autoHideTickLine)
        return;
    labels.forEach(function (label, idx) {
        var tickLine = tickLines[idx];
        if (tickLine)
            tickLine.style.visibility = label.style.visibility;
    });
}
export function getFactor() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var fn = function (str) { return (str === 'positive' ? -1 : 1); };
    return args.reduce(function (acc, cur) { return acc * fn(cur); }, 1);
}
//# sourceMappingURL=index.js.map