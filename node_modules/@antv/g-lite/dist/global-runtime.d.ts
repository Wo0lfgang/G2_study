import type { LayoutRegistry } from './css';
import type { CSSProperty } from './css/CSSProperty';
import { PropertySyntax } from './css/interfaces';
import { DefaultStyleValueRegistry } from './css/StyleValueRegistry';
import { DisplayObjectPool } from './display-objects';
import { Camera } from './camera';
import type { GeometryAABBUpdater, SceneGraphSelector, SceneGraphService } from './services';
import { OffscreenCanvasCreator, TextService } from './services';
import { Shape } from './types';
export declare const runtime: GlobalRuntime;
export interface GlobalRuntime {
    CameraContribution: new () => Camera;
    AnimationTimeline: any;
    EasingFunction: (...args: any[]) => (t: number) => number;
    displayObjectPool: DisplayObjectPool;
    offscreenCanvas: OffscreenCanvasCreator;
    sceneGraphSelector: SceneGraphSelector;
    sceneGraphService: SceneGraphService;
    textService: TextService;
    geometryUpdaterFactory: Record<Shape, GeometryAABBUpdater<any>>;
    styleValueRegistry: DefaultStyleValueRegistry;
    layoutRegistry: LayoutRegistry;
    CSSPropertySyntaxFactory: Record<PropertySyntax, Partial<CSSProperty<any, any>>>;
    globalThis: any;
    enableCSSParsing: boolean;
}
//# sourceMappingURL=global-runtime.d.ts.map