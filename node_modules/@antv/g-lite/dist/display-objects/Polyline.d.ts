import type { DisplayObjectConfig } from '../dom';
import { Point } from '../shapes';
import type { BaseStyleProps, ParsedBaseStyleProps } from '../types';
import type { DisplayObject } from './DisplayObject';
import { Polygon } from './Polygon';
export interface PolylineStyleProps extends BaseStyleProps {
    points: [number, number][];
    /**
     * marker will be positioned at the first point
     */
    markerStart?: DisplayObject;
    /**
     * marker will be positioned at the last point
     */
    markerEnd?: DisplayObject;
    markerMid?: DisplayObject;
    /**
     * offset relative to original position
     */
    markerStartOffset?: number;
    /**
     * offset relative to original position
     */
    markerEndOffset?: number;
}
export interface ParsedPolylineStyleProps extends ParsedBaseStyleProps {
    points: {
        points: [number, number][];
        segments: [number, number][];
        totalLength: number;
    };
    markerStart?: DisplayObject;
    markerMid?: DisplayObject;
    markerEnd?: DisplayObject;
    markerStartOffset?: number;
    markerEndOffset?: number;
}
/**
 * Polyline inherits the marker-related capabilities of Polygon.
 */
export declare class Polyline extends Polygon {
    constructor({ style, ...rest }?: DisplayObjectConfig<PolylineStyleProps>);
    getTotalLength(): number;
    getPointAtLength(distance: number, inWorldSpace?: boolean): Point;
    getPoint(ratio: number, inWorldSpace?: boolean): Point;
    getStartTangent(): number[][];
    getEndTangent(): number[][];
}
//# sourceMappingURL=Polyline.d.ts.map