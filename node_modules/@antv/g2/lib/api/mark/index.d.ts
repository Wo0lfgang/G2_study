import { HOMMarkType } from '../../spec';
import { Interval, Rect, Point, Area, Line, Cell, Vector, Link, Polygon, Image, Text, Box, LineX, LineY, Range, RangeX, RangeY, Connector, Sankey, Treemap, Boxplot, Shape, Pack, ForceGraph, Tree, WordCloud, HOMMark } from './mark';
export interface Mark {
    mark(HOMMark: HOMMarkType): HOMMark;
    interval(): Interval;
    rect(): Rect;
    point(): Point;
    area(): Area;
    line(): Line;
    cell(): Cell;
    vector(): Vector;
    link(): Link;
    polygon(): Polygon;
    image(): Image;
    text(): Text;
    box(): Box;
    lineX(): LineX;
    lineY(): LineY;
    range(): Range;
    rangeX(): RangeX;
    rangeY(): RangeY;
    connector(): Connector;
    sankey(): Sankey;
    treemap(): Treemap;
    boxplot(): Boxplot;
    shape(): Shape;
    pack(): Pack;
    forceGraph(): ForceGraph;
    tree(): Tree;
    wordCloud(): WordCloud;
}
export { MarkNode } from './base';
export declare const mark: {
    mark: typeof HOMMark;
    interval: typeof Interval;
    rect: typeof Rect;
    point: typeof Point;
    area: typeof Area;
    line: typeof Line;
    cell: typeof Cell;
    vector: typeof Vector;
    link: typeof Link;
    polygon: typeof Polygon;
    image: typeof Image;
    text: typeof Text;
    box: typeof Box;
    lineX: typeof LineX;
    lineY: typeof LineY;
    range: typeof Range;
    rangeX: typeof RangeX;
    rangeY: typeof RangeY;
    connector: typeof Connector;
    sankey: typeof Sankey;
    treemap: typeof Treemap;
    boxplot: typeof Boxplot;
    shape: typeof Shape;
    pack: typeof Pack;
    forceGraph: typeof ForceGraph;
    tree: typeof Tree;
    wordCloud: typeof WordCloud;
};
