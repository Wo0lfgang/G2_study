"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hyphen = exports.plus = exports.tick = exports.cross = exports.line = exports.bowtie = exports.hexagon = exports.triangleDown = exports.triangle = exports.diamond = exports.square = exports.point = void 0;
/**
 * ○
 */
function point(x, y, r) {
    return [
        ['M', x - r, y],
        ['A', r, r, 0, 1, 0, x + r, y],
        ['A', r, r, 0, 1, 0, x - r, y],
        ['Z'],
    ];
}
exports.point = point;
/**
 * □
 */
function square(x, y, r) {
    return [
        ['M', x - r, y - r],
        ['L', x + r, y - r],
        ['L', x + r, y + r],
        ['L', x - r, y + r],
        ['Z'],
    ];
}
exports.square = square;
/**
 * ◇
 */
function diamond(x, y, r) {
    const hr = r * 0.618;
    return [
        ['M', x - hr, y],
        ['L', x, y - r],
        ['L', x + hr, y],
        ['L', x, y + r],
        ['Z'],
    ];
}
exports.diamond = diamond;
/**
 * △
 */
function triangle(x, y, r) {
    const diffY = r * Math.sin((1 / 3) * Math.PI);
    return [
        ['M', x - r, y + diffY],
        ['L', x, y - diffY],
        ['L', x + r, y + diffY],
        ['Z'],
    ];
}
exports.triangle = triangle;
/**
 * ▽
 */
function triangleDown(x, y, r) {
    const diffY = r * Math.sin((1 / 3) * Math.PI);
    return [
        ['M', x - r, y - diffY],
        ['L', x + r, y - diffY],
        ['L', x, y + diffY],
        ['Z'],
    ];
}
exports.triangleDown = triangleDown;
/**
 * ⬡
 */
function hexagon(x, y, r) {
    const diffX = (r / 2) * Math.sqrt(3);
    return [
        ['M', x, y - r],
        ['L', x + diffX, y - r / 2],
        ['L', x + diffX, y + r / 2],
        ['L', x, y + r],
        ['L', x - diffX, y + r / 2],
        ['L', x - diffX, y - r / 2],
        ['Z'],
    ];
}
exports.hexagon = hexagon;
/**
 * ▷◁
 */
function bowtie(x, y, r) {
    const diffY = r - 1.5;
    return [
        ['M', x - r, y - diffY],
        ['L', x + r, y + diffY],
        ['L', x + r, y - diffY],
        ['L', x - r, y + diffY],
        ['Z'],
    ];
}
exports.bowtie = bowtie;
/** -- Uncloseable path ------------------------------------------------------------------------------- */
/**
 * |
 */
function line(x, y, r) {
    return [
        ['M', x, y + r],
        ['L', x, y - r],
    ];
}
exports.line = line;
/**
 * ✕
 */
function cross(x, y, r) {
    return [
        ['M', x - r, y - r],
        ['L', x + r, y + r],
        ['M', x + r, y - r],
        ['L', x - r, y + r],
    ];
}
exports.cross = cross;
/**
 * 工
 */
function tick(x, y, r) {
    return [
        ['M', x - r / 2, y - r],
        ['L', x + r / 2, y - r],
        ['M', x, y - r],
        ['L', x, y + r],
        ['M', x - r / 2, y + r],
        ['L', x + r / 2, y + r],
    ];
}
exports.tick = tick;
/**
 * +
 */
function plus(x, y, r) {
    return [
        ['M', x - r, y],
        ['L', x + r, y],
        ['M', x, y - r],
        ['L', x, y + r],
    ];
}
exports.plus = plus;
/**
 * -
 */
function hyphen(x, y, r) {
    return [
        ['M', x - r, y],
        ['L', x + r, y],
    ];
}
exports.hyphen = hyphen;
//# sourceMappingURL=symbol.js.map