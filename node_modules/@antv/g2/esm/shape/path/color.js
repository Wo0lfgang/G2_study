var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { Path as GPath } from '@antv/g';
import { applyStyle, getShapeTheme } from '../utils';
import { select } from '../../utils/selection';
/**
 * Draw a filled or hollow path.
 */
export const Color = (options) => {
    const { arrow, colorAttribute } = options, style = __rest(options, ["arrow", "colorAttribute"]);
    return (points, value, coordinate, theme) => {
        const { mark, shape, defaultShape } = value;
        const _a = getShapeTheme(theme, mark, shape, defaultShape), { stroke } = _a, shapeTheme = __rest(_a, ["stroke"]);
        const { d, color } = value;
        return select(new GPath())
            .call(applyStyle, shapeTheme)
            .style('d', d)
            .style(colorAttribute, color)
            .call(applyStyle, style)
            .node();
    };
};
Color.props = {
    defaultEnterAnimation: 'fadeIn',
    defaultUpdateAnimation: 'morphing',
    defaultExitAnimation: 'fadeOut',
};
//# sourceMappingURL=color.js.map