import { isOverlap, parseAABB } from '../utils/bounds';
/**
 * Hide the label when overlap.
 */
export const OverlapHide = (options) => {
    const { priority } = options;
    return (labels, coordinate) => {
        const displayLabels = [];
        // When overlap, will hide the next label.
        if (priority)
            labels.sort(priority);
        labels.forEach((l) => {
            l.attr('visibility', 'visible');
            const b1 = l.getLocalBounds();
            const overlaping = displayLabels.some((dl) => isOverlap(parseAABB(b1), parseAABB(dl.getLocalBounds())));
            if (overlaping)
                l.attr('visibility', 'hidden');
            else
                displayLabels.push(l);
        });
        return labels;
    };
};
//# sourceMappingURL=overlapHide.js.map