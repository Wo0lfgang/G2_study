var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { Slider as SliderComponent } from '@antv/gui';
import { format } from 'd3-format';
import { invert } from '../utils/scale';
/**
 * Slider component.
 */
export const Slider = (options) => {
    // do not pass size.
    const { orient, labelFormatter, size, style } = options, rest = __rest(options, ["orient", "labelFormatter", "size", "style"]);
    return ([scale], value, coordinate, theme) => {
        var _a;
        const { bbox } = value;
        const { x, y, width, height } = bbox;
        const { slider: sliderTheme = {} } = theme;
        const defaultFormatter = ((_a = scale.getFormatter) === null || _a === void 0 ? void 0 : _a.call(scale)) || ((v) => v);
        const formatter = typeof labelFormatter === 'string'
            ? format(labelFormatter)
            : labelFormatter;
        return new SliderComponent({
            className: 'slider',
            style: Object.assign({}, sliderTheme, Object.assign(Object.assign({ x,
                y, trackLength: orient === 'horizontal' ? width : height, orient, formatter: (v) => {
                    const f = formatter || defaultFormatter;
                    // @todo Pass index to distinguish the left and the right value.
                    const tick = invert(scale, v, true);
                    return f(tick);
                } }, style), rest)),
        });
    };
};
Slider.props = {
    defaultPosition: 'bottom',
    defaultSize: 24,
    defaultOrder: 1,
};
//# sourceMappingURL=slider.js.map