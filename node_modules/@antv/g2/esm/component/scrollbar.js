var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { Scrollbar as ScrollbarComponent } from '@antv/gui';
/**
 * Scrollbar component.
 */
export const Scrollbar = (options) => {
    const { orient, labelFormatter, style } = options, rest = __rest(options, ["orient", "labelFormatter", "style"]);
    return (scales, value, coordinate, theme) => {
        const { bbox } = value;
        const { x, y, width, height } = bbox;
        const { scrollbar: scrollbarTheme = {} } = theme;
        return new ScrollbarComponent({
            className: 'scrollbar',
            style: Object.assign({}, scrollbarTheme, Object.assign(Object.assign(Object.assign(Object.assign({}, style), { x,
                y, trackLength: orient === 'horizontal' ? width : height }), rest), { orient, value: 0, 
                // @todo Get actual length of content.
                contentLength: 1500, viewportLength: orient === 'horizontal' ? width : height })),
        });
    };
};
Scrollbar.props = {
    defaultPosition: 'bottom',
    defaultSize: 24,
    defaultOrder: 1,
};
//# sourceMappingURL=scrollbar.js.map