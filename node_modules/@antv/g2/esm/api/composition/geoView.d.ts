import { GeoViewComposition } from '../../spec';
import { ValueAttribute, ObjectAttribute, ArrayAttribute, Concrete } from '../types';
import { Mark } from '../mark';
import { Composition, CompositionNode } from './index';
type GeoViewSpec = Concrete<GeoViewComposition>;
export interface GeoView extends Mark, Composition {
    data: ValueAttribute<GeoViewSpec['data'], GeoView>;
    key: ValueAttribute<GeoViewSpec['key'], GeoView>;
    coordinate: ArrayAttribute<GeoViewSpec['coordinate'], GeoView>;
    interaction: ObjectAttribute<GeoViewSpec['interaction'], GeoView>;
    style: ObjectAttribute<GeoViewSpec['style'], GeoView>;
    theme: ObjectAttribute<GeoViewSpec['theme'], GeoView>;
    scale: ObjectAttribute<GeoViewSpec['scale'], GeoView>;
    legend: ObjectAttribute<GeoViewSpec['legend'], GeoView>;
}
export declare class GeoView extends CompositionNode<GeoViewComposition> {
    constructor();
}
export {};
