import { GeoPathComposition } from '../../spec';
import { ValueAttribute, ObjectAttribute, Concrete } from '../types';
import { Mark } from '../mark';
import { Composition, CompositionNode } from './index';
type GeoPathSpec = Concrete<GeoPathComposition>;
export interface GeoPath extends Mark, Composition {
    data: ValueAttribute<GeoPathSpec['data'], GeoPath>;
    coordinate: ValueAttribute<GeoPathSpec['coordinate'], GeoPath>;
    interaction: ObjectAttribute<GeoPathSpec['interaction'], GeoPath>;
    style: ObjectAttribute<GeoPathSpec['style'], GeoPath>;
    theme: ObjectAttribute<GeoPathSpec['theme'], GeoPath>;
    scale: ObjectAttribute<GeoPathSpec['scale'], GeoPath>;
    encode: ObjectAttribute<GeoPathSpec['encode'], GeoPath>;
    legend: ObjectAttribute<GeoPathSpec['legend'], GeoPath>;
}
export declare class GeoPath extends CompositionNode<GeoPathComposition> {
    constructor();
}
export {};
