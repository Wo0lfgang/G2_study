var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { defineProps, nodeProps } from '../props';
import { mark } from '../mark';
import { CompositionNode } from './base';
let View = class View extends CompositionNode {
    constructor(options = {}, type = 'view') {
        super(options, type);
    }
};
View = __decorate([
    defineProps([
        { type: 'value', name: 'data' },
        { type: 'value', name: 'coordinate' },
        { type: 'object', name: 'interaction' },
        { type: 'object', name: 'theme' },
        { type: 'object', name: 'style' },
        { type: 'object', name: 'scale' },
        { type: 'object', name: 'axis' },
        { type: 'object', name: 'legend' },
        ...nodeProps(mark),
    ])
], View);
export { View };
//# sourceMappingURL=view.js.map